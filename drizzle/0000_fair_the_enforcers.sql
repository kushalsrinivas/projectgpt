CREATE TABLE "projectgpt_account" (
	"userId" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"providerAccountId" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "projectgpt_account_provider_providerAccountId_pk" PRIMARY KEY("provider","providerAccountId")
);
--> statement-breakpoint
CREATE TABLE "projectgpt_chat_message" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "projectgpt_chat_message_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" varchar(255) NOT NULL,
	"conversationId" varchar(255) NOT NULL,
	"role" varchar(20) NOT NULL,
	"content" text NOT NULL,
	"model" varchar(100),
	"tokensUsed" integer DEFAULT 0 NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "projectgpt_post" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "projectgpt_post_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256),
	"createdById" varchar(255) NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "projectgpt_session" (
	"sessionToken" varchar(255) PRIMARY KEY NOT NULL,
	"userId" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE "projectgpt_user_quota" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "projectgpt_user_quota_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" varchar(255) NOT NULL,
	"requestsUsed" integer DEFAULT 0 NOT NULL,
	"tokensUsed" integer DEFAULT 0 NOT NULL,
	"lastReset" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "projectgpt_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"emailVerified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255),
	"tier" varchar(20) DEFAULT 'free' NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "projectgpt_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "projectgpt_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
ALTER TABLE "projectgpt_account" ADD CONSTRAINT "projectgpt_account_userId_projectgpt_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."projectgpt_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "projectgpt_chat_message" ADD CONSTRAINT "projectgpt_chat_message_userId_projectgpt_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."projectgpt_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "projectgpt_post" ADD CONSTRAINT "projectgpt_post_createdById_projectgpt_user_id_fk" FOREIGN KEY ("createdById") REFERENCES "public"."projectgpt_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "projectgpt_session" ADD CONSTRAINT "projectgpt_session_userId_projectgpt_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."projectgpt_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "projectgpt_user_quota" ADD CONSTRAINT "projectgpt_user_quota_userId_projectgpt_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."projectgpt_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "account_user_id_idx" ON "projectgpt_account" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "chat_message_user_id_idx" ON "projectgpt_chat_message" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "chat_message_conversation_id_idx" ON "projectgpt_chat_message" USING btree ("conversationId");--> statement-breakpoint
CREATE INDEX "created_by_idx" ON "projectgpt_post" USING btree ("createdById");--> statement-breakpoint
CREATE INDEX "name_idx" ON "projectgpt_post" USING btree ("name");--> statement-breakpoint
CREATE INDEX "t_user_id_idx" ON "projectgpt_session" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "user_quota_user_id_idx" ON "projectgpt_user_quota" USING btree ("userId");